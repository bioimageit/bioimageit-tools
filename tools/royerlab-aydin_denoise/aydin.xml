<tool id="aydin" name="Aydin" version="0.1.13" python_template_version="3.9">
    <requirements>
        <package type="conda" env="aydin" init="pip install aydin">python=3.9 cudatoolkit</package>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        python '$__tool_directory__cli.py' --infile ${i} --batch-axes ${batch-axes} --channel-axes ${channel-axes} --variant ${variant} --out ${out_denoised} 
    ]]></command>
    <inputs>
        <param type="data" name="i" format="imagetiff" label="Input Image" help="image" />
        <param argument="--batch-axes" type="string" value="default" label="Batch Axes" help="only pass while denoising a single image" />
        <param argument="--channel-axes" type="string" value="default" label="Channel Axes" help="only pass while denoising a single image" />
        <param argument="--variant" type="select" label="Variant" help="noise2selffgr-cb by default and recommended for Nvidia GPU usage">
            <option value="noise2selffgr-cb">Noise2SelfFGR-cb</option>
            <option value="classic-butterworth">Classic-butterworth</option>
            <option value="classic-gaussian">Classic-gaussian</option>
            <option value="classic-gm">Classic-gm</option>
            <option value="classic-nlm">Classic-nlm</option>
            <option value="classic-tv">Classic-tv</option>
            <option value="noise2selfcnn-jinet">Noise2SelfCNN-jinet</option>
            <option value="noise2selffgr-lgbm">Noise2SelfFGR-lgbm</option>
            <option value="noise2selffgr-random_forest">Noise2SelfFGR-random_forest</option>
        </param>
    </inputs>
    <outputs>
        <data name="out_denoised" format="imagetiff" label="Denoised output image" />
    </outputs>
    <help><![CDATA[
        https://royerlab.github.io/aydin/index.html
    ]]></help>
    <citations>
    </citations>
</tool>
